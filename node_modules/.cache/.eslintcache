[{"C:\\Users\\ari00\\Documents\\GitHub\\CodeJam-Piltover-ML\\src\\index.js":"1","C:\\Users\\ari00\\Documents\\GitHub\\CodeJam-Piltover-ML\\src\\App.js":"2","C:\\Users\\ari00\\Documents\\GitHub\\CodeJam-Piltover-ML\\src\\Timer.js":"3"},{"size":207,"mtime":1645916030323,"results":"4","hashOfConfig":"5"},{"size":335,"mtime":1645927026777,"results":"6","hashOfConfig":"5"},{"size":2339,"mtime":1645927026784,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"1ekjv7",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"C:\\Users\\ari00\\Documents\\GitHub\\CodeJam-Piltover-ML\\src\\index.js",[],[],["19","20"],"C:\\Users\\ari00\\Documents\\GitHub\\CodeJam-Piltover-ML\\src\\App.js",[],[],"C:\\Users\\ari00\\Documents\\GitHub\\CodeJam-Piltover-ML\\src\\Timer.js",["21","22","23","24"],[]," import React, {useEffect, useState} from \"react\";\r\n\r\n import useCountDown from 'react-countdown-hook';\r\n import { CircularProgressbar } from 'react-circular-progressbar';\r\n import 'react-circular-progressbar/dist/styles.css';\r\n\r\n var initialTime = 6 * 1000; // initial time in milliseconds, defaults to 60000\r\n const interval = 50; // interval to change remaining time amount, defaults to 1000\r\n\r\n export default function Timer() {\r\n\r\n    const [timeLeft, { start, pause, resume, reset }] = useCountDown(initialTime, interval);\r\n    const [work, setWork] = useState(false);\r\n\r\n    \r\n\r\n    React.useEffect(() => {\r\n        if (timeLeft === 0) {\r\n            if(work){\r\n                setWork(false)\r\n            }\r\n            else {\r\n                setWork(true);\r\n            }\r\n            \r\n        }\r\n      }, [timeLeft]);\r\n      React.useEffect(() => {\r\n        if (work) {\r\n            start(1500000);\r\n            }\r\n            else {\r\n            start(300000);\r\n            }\r\n            \r\n        \r\n      }, [work]);\r\n\r\n   \r\n      \r\n\r\n     return ( \r\n         <>\r\n         <div style={{ width: 200, height: 200 }}>\r\n         <h1> <center>{WorkOrBreak(work)}\r\n\r\n<div style={{ width: 200, height: 200 }}>\r\n<CircularProgressbar value={timeLeft/1500000*100} text={ `${timeToMinutes(timeLeft)} : ${timeToSeconds(timeLeft)} : ${timeToMillis(timeLeft)}` } />;\r\n</div>\r\n     \r\n      <button onClick={pause}>\r\n        Pause\r\n      </button>\r\n      <button onClick={resume}>\r\n        Resume\r\n      </button>\r\n      <button onClick={start}>\r\n        {WorkOrBreak(!work)}!\r\n      </button>\r\n      </center></h1>\r\n        </div>\r\n        </>\r\n     )\r\n     function timeToMinutes(time) {\r\n      \r\n        var min = Math.floor((time/1000%3600)/60)\r\n        if (min<10) {\r\n            var str = `0${min} `\r\n        }\r\n        else str = min\r\n        return str\r\n    }\r\n     function timeToSeconds(time) {\r\n       \r\n        var sec = Math.floor(time/1000%60)\r\n        if (sec<10) {\r\n            var str = `0${sec} `\r\n        }\r\n        else str = sec\r\n        return str;\r\n    }\r\n    function timeToMillis(time) {\r\n       \r\n        var mil = Math.floor(time/100%10)\r\n        \r\n        return mil\r\n    }\r\n\r\n    function WorkOrBreak(work){\r\n        if (work){\r\n            return \"Work\"\r\n        }\r\n        else return \"Break\"\r\n    }\r\n }\r\n\r\n\r\n",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":1,"column":17,"nodeType":"31","messageId":"32","endLine":1,"endColumn":26},{"ruleId":"29","severity":1,"message":"33","line":12,"column":46,"nodeType":"31","messageId":"32","endLine":12,"endColumn":51},{"ruleId":"34","severity":1,"message":"35","line":27,"column":10,"nodeType":"36","endLine":27,"endColumn":20,"suggestions":"37"},{"ruleId":"34","severity":1,"message":"38","line":37,"column":10,"nodeType":"36","endLine":37,"endColumn":16,"suggestions":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'reset' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'work'. Either include it or remove the dependency array.","ArrayExpression",["42"],"React Hook React.useEffect has a missing dependency: 'start'. Either include it or remove the dependency array.",["43"],"no-global-assign","no-unsafe-negation",{"desc":"44","fix":"45"},{"desc":"46","fix":"47"},"Update the dependencies array to be: [timeLeft, work]",{"range":"48","text":"49"},"Update the dependencies array to be: [start, work]",{"range":"50","text":"51"},[817,827],"[timeLeft, work]",[1023,1029],"[start, work]"]